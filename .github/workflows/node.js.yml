name: Node.js CI

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.20.1]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm install
      - run: npm ci
      - run: npm run build --if-present


  test-stage:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Running Tests
        uses: actions/checkout@v3
      - run: echo "running"

  build-and-push-docker-image:
    name: Build Docker image and push to repositories
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest
    needs: ['build', 'test-stage']

    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

#       # setup Docker bulid action
#       - name: Set up Docker Buildx
#         id: buildx
#         uses: docker/setup-buildx-action@v2
        
      - name: Configure Docker daemon
        run: |
          echo '{ "insecure-registries": ["180.150.207.73:5000"] }' | sudo tee /etc/docker/daemon.json
          sudo systemctl restart docker
      - name: Login to Docker registry
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }} 180.150.207.73:5000
      - name: Build and Push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            180.150.207.73:5000/frontend:${{ github.sha }}
            180.150.207.73:5000/frontend:latest

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
